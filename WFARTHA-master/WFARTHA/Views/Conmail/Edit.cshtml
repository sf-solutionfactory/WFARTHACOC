@model WFARTHA.Entities.CONMAIL

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.pagina_r = 934;
    ViewBag.carpeta_r = 900;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            <div class=" dropdown col s12">
                @Html.LabelFor(model => model.HOST, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.HOST, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HOST, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class=" dropdown col s12">
                @Html.LabelFor(model => model.PORT, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.PORT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PORT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class=" dropdown col s12">
                @Html.LabelFor(model => model.SSL, htmlAttributes: new { @class = "control-label col-md-2" })
                @if (Model.SSL == true)
                {
                    <p>
                        <label>
                            <input name="ckb_ssl" type="checkbox" checked="checked" />
                            <span>SSL</span>
                        </label>
                    </p>
                }
                else
                {
                <p>
                    <label>
                        <input  name="ckb_ssl" type="checkbox" />
                        <span>SSL</span>
                    </label>
                </p>
                }
            </div>
        </div>


        <div class="form-group">
            <div class=" dropdown col s12">
                @Html.LabelFor(model => model.MAIL, htmlAttributes: new { @id = "lbl_mail" })
                @Html.EditorFor(model => model.MAIL, new { htmlAttributes = new { @type = "email", required = true } })
                @Html.ValidationMessageFor(model => model.MAIL, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class=" dropdown col s12">
                @Html.LabelFor(model => model.PASS, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.PASS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PASS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class=" dropdown col s12">
                @Html.LabelFor(model => model.ACTIVO, htmlAttributes: new { @class = "control-label col-md-2" })
                @if (Model.ACTIVO == true)
                {
                <p>
                    <label>
                        <input  name="ckb_activo" type="checkbox" checked= "checked" />
                        <span>ACTIVO</span>
                    </label>
                </p>
                }
                else {
                <p>
                    <label>
                        <input name="ckb_activo" type="checkbox"/>
                        <span>ACTIVO</span>
                    </label>
                </p> 
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>

    <script>

        $('#MAIL').on("focusout", function () {
            var email = $('#MAIL').val();
            $('#MAIL').removeClass("valid");
            $('#MAIL').removeClass("invalid");
            if (validateEmail(email) == true) {
                $('#MAIL').addClass("valid");
            }
            else {
                $('#MAIL').addClass("invalid");
            }
        });

        function validateEmail(email) {
            var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        }</script>
}

    <div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
